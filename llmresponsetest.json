{'description': "Modify the line of code that sets the 'Cache-Control' header so that the 'max-age' is set to 43200 seconds (12 hours) instead of 86400 seconds (1 day). This involves changing only the numerical value of the 'max-age'. The 'instructor' object is being returned as the JSON response, with caching headers applied.", 'line': "res.set('Cache-Control', 'public, max-age=86400').json(instructor)", 'question': "// Handle requests to the /instructor API endpoint\n\n// Load Express\nlet express = require('express')\nlet router = express.Router()\n\n// Load internal modules\nlet instructorModel = require.main.require('./models/instructor.js')\n\n// Respond to requests for an instructor\nrouter.use('/:id', function (req, res) {\n    // Validate that the request is correct\n  if ((typeof (req.params.id) === 'undefined') || isNaN(req.params.id)) {\n    res.sendStatus(400)\n    return\n  }\n\n    // Search for the instructor in the database\n  instructorModel.findOne({_id: req.params.id}).populate({\n    path: 'courses',\n    options: {\n      sort: {\n        semester: -1,\n        department: 1,\n        catalogNumber: 1\n      }\n    }\n  }).exec(function (err, instructor) {\n    if (err) {\n      console.log(err)\n      res.send(500)\n    } else {\n      if (instructor === null) {\n        res.sendStatus(404)\n      } else {\n        res.set('Cache-Control', 'public, max-age=86400').json(instructor)\n      }\n    }\n  })\n})\n\nmodule.exports = router"}
